name: CI
defaults:
  run:
    shell: bash
concurrency:
  group: ci-${{ github.head_ref }}
  cancel-in-progress: false
on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3.0.2
      - uses: ibiqlik/action-yamllint@v3.1.0
        with:
          file_or_dir: .
          strict: true
          no_warnings: false
          config_file: .yamllint
      - run: shellcheck --color=never --check-sourced --shell=bash release*.bash
  build:
    needs:
      - lint
    name: Build
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3.0.2
      # - name: Build Solidity contracts using makefile
      #   working-directory: packages/contracts
      #   run: |
      #      make build
      - uses: actions/setup-node@v3.4.1
        with:
          node-version-file: '.nvmrc'
          cache: npm
          cache-dependency-path: package-lock.json
      - run: echo "./node_modules/.bin" >> $GITHUB_PATH
      - name: Install dependencies
        run: npm ci
      - name: Run lint
        run: npm run lint --workspaces --if-present
      - name: Build and unit test
        run: |
          npm run build
          npm run test
      - name: Start MySQL for the monorepo integration test
        uses: mirromutth/mysql-action@v1.1
        with:
          host port: 3800
          mysql version: '8.0'
          mysql database: 'join-server-test'
          mysql root password: 'password'
      - name: Integration tests (inside monorepo)
        env:
          SECRET_DB_SCHEMA: join-server-test
          SECRET_DB_USER: root
          SECRET_DB_PASSWORD: password
          SECRET_DB_HOST: localhost
          SECRET_DB_PORT: 3800
        run: |
          sleep 10 # need to allow some time for mysql to start up
          mysql --user=root --password=password --host=127.0.0.1 --port=3800 < packages/default-join-server/create_tables.sql
          echo "./node_modules/.bin" >> $GITHUB_PATH
          npm run integration-test
      # - name: Start Streamr Docker Stack
      #   uses: streamr-dev/streamr-docker-dev-action@v1.0.0
      #   with:
      #     services-to-start: 'parity-sidechain-node0 parity-node0'
      # - name: Integration Test (with dev-docker environment)
      #   env:
      #     TEST_TIMEOUT: '600000'
      #   run: npm run integration-test --workspaces --if-present
