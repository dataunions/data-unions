---
name: CI
defaults:
  run:
    shell: bash
concurrency:
  group: ci-${{ github.head_ref }}
  cancel-in-progress: false
on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3.0.2
      - uses: ibiqlik/action-yamllint@v3.1.0
        with:
          file_or_dir: .
          strict: true
          no_warnings: false
          config_file: .yamllint
      - run: shellcheck --color=never --check-sourced --shell=bash release*.bash
  build:
    needs:
      - lint
    name: Build
    runs-on: ubuntu-20.04
    env:
      SECRET_DB_SCHEMA: join-server-test
      SECRET_DB_USER: root
      SECRET_DB_PASSWORD: password
      SECRET_DB_HOST: localhost
      SECRET_DB_PORT: 3800
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: ${{ env.SECRET_DB_PASSWORD }}
          MYSQL_DATABASE: ${{ env.SECRET_DB_SCHEMA }}
          MYSQL_USER: ${{ env.SECRED_DB_USER }}
          MYSQL_PASSWORD: ${{ env.SECRET_DB_PASSWORD }}
        ports:
          - 3800:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
    steps:
      - uses: actions/checkout@v3.0.2
      - name: Install Node
        run: |
          source $HOME/.nvm/nvm.sh
          nvm install $(cat .nvmrc)
          echo "$HOME/.nvm/versions/node/$(cat .nvmrc)/bin" >> $GITHUB_PATH
          echo "$(pwd)/node_modules/.bin" >> $GITHUB_PATH
      - name: Get npm cache directory
        id: npm-cache-dir
        run: |
          echo "::set-output name=dir::$(npm config get cache)"
      - uses: actions/cache@v3
        id: npm-cache # use this to check for `cache-hit` ==> if: steps.npm-cache.outputs.cache-hit != 'true'
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install dependencies
        run: |
          npm ci
      - name: Run lint
        run: |
          npm run lint
      - name: Build and unit test
        run: |
          npm run build
          npm run test
      - name: Integration tests
        run: |
          mysql --user=${{env.SECRET_DB_USER}} --password=${{env.SECRET_DB_PASSWORD}} --host=${{env.SECRET_DB_HOST}} --port=${{env.SECRET_DB_PORT}} < packages/default-join-server/create_tables.sql
          npm run integration-test
